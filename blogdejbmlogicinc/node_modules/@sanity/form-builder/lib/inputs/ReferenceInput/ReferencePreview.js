"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReferencePreview = ReferencePreview;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _components = require("@sanity/base/components");

var _Preview = _interopRequireDefault(require("../../Preview"));

var _TimeAgo = require("./utils/TimeAgo");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function UnavailableMessage(props) {
  var Icon = props.icon;
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    padding: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1
  }, /*#__PURE__*/_react.default.createElement(Icon, null))), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    marginLeft: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    weight: "semibold"
  }, props.title), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    muted: true,
    size: 1
  }, props.children))));
}
/**
 * Used to preview a referenced type
 * Takes the reference type as props
 * @param props
 * @constructor
 */


function ReferencePreview(props) {
  var _preview$draft;

  var layout = props.layout,
      refType = props.refType,
      showTypeLabel = props.showTypeLabel,
      availability = props.availability,
      preview = props.preview,
      id = props.id;
  var theme = (0, _ui.useRootTheme)();
  var notFound = availability.reason === 'NOT_FOUND';
  var insuficcientPermissions = availability.reason === 'PERMISSION_DENIED';
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, availability.available ? /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_Preview.default, {
    type: refType,
    value: preview.draft || preview.published,
    layout: layout
  })) : /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingY: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true
  }, "Document unavailable")))), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    paddingLeft: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Inline, {
    space: 4
  }, showTypeLabel && /*#__PURE__*/_react.default.createElement(_ui.Label, {
    size: 1,
    muted: true
  }, refType.title), insuficcientPermissions || notFound ? /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    portal: true,
    content: notFound ? /*#__PURE__*/_react.default.createElement(UnavailableMessage, {
      title: "Not found",
      icon: _icons.HelpCircleIcon
    }, "The referenced document does not exist", /*#__PURE__*/_react.default.createElement("br", null), "(id: ", /*#__PURE__*/_react.default.createElement("code", null, id), ")") : /*#__PURE__*/_react.default.createElement(UnavailableMessage, {
      title: "Insufficcient permissions",
      icon: _icons.AccessDeniedIcon
    }, "The referenced document could not be accessed due to insufficient permissions")
  }, /*#__PURE__*/_react.default.createElement(_components.TextWithTone, {
    tone: "default"
  }, /*#__PURE__*/_react.default.createElement(_icons.HelpCircleIcon, null)))) : null, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, preview.published ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Published ", /*#__PURE__*/_react.default.createElement(_TimeAgo.TimeAgo, {
      time: preview.published._updatedAt
    })) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Not published")))
  }, /*#__PURE__*/_react.default.createElement(_components.TextWithTone, {
    tone: theme.tone === 'default' ? 'positive' : 'default',
    size: 1,
    dimmed: !preview.published,
    muted: !preview.published
  }, /*#__PURE__*/_react.default.createElement(_icons.PublishIcon, null))), /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, preview.draft ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Edited ", /*#__PURE__*/_react.default.createElement(_TimeAgo.TimeAgo, {
      time: (_preview$draft = preview.draft) === null || _preview$draft === void 0 ? void 0 : _preview$draft._updatedAt
    })) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "No unpublished edits")))
  }, /*#__PURE__*/_react.default.createElement(_components.TextWithTone, {
    tone: theme.tone === 'default' ? 'caution' : 'default',
    size: 1,
    dimmed: !preview.draft,
    muted: !preview.draft
  }, /*#__PURE__*/_react.default.createElement(_icons.EditIcon, null)))))));
}